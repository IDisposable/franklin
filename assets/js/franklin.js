(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

// 'use strict';

jQuery(document).ready(function ($) {
  require('./modules/video-ajax');
  require('./modules/video-media-library');
  require('./modules/video-field-updated');
  require('./modules/video-clear');
});

window.$ = jQuery;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZyYW5rbGluLmpzIl0sIm5hbWVzIjpbImpRdWVyeSIsImRvY3VtZW50IiwicmVhZHkiLCIkIiwicmVxdWlyZSIsIndpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQUEsT0FBT0MsUUFBUCxFQUFpQkMsS0FBakIsQ0FBdUIsVUFBU0MsQ0FBVCxFQUFZO0FBQ2pDQyxVQUFRLHNCQUFSO0FBQ0FBLFVBQVEsK0JBQVI7QUFDQUEsVUFBUSwrQkFBUjtBQUNBQSxVQUFRLHVCQUFSO0FBRUQsQ0FORDs7QUFRQUMsT0FBT0YsQ0FBUCxHQUFXSCxNQUFYIiwiZmlsZSI6ImZyYW5rbGluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gJ3VzZSBzdHJpY3QnO1xuXG5qUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCQpIHtcbiAgcmVxdWlyZSgnLi9tb2R1bGVzL3ZpZGVvLWFqYXgnKTtcbiAgcmVxdWlyZSgnLi9tb2R1bGVzL3ZpZGVvLW1lZGlhLWxpYnJhcnknKTtcbiAgcmVxdWlyZSgnLi9tb2R1bGVzL3ZpZGVvLWZpZWxkLXVwZGF0ZWQnKTtcbiAgcmVxdWlyZSgnLi9tb2R1bGVzL3ZpZGVvLWNsZWFyJyk7XG5cbn0pO1xuXG53aW5kb3cuJCA9IGpRdWVyeTtcbiJdfQ==
},{"./modules/video-ajax":2,"./modules/video-clear":3,"./modules/video-field-updated":4,"./modules/video-media-library":5}],2:[function(require,module,exports){
"use strict";

window.videoAjax = function (url, $preview) {

  var data = {
    "action": "franklin_video_shortcode",
    "data": url
  };

  $.ajax({
    type: 'post',
    url: ajaxurl,
    data: data,
    complete: function complete(response) {
      var output = response.responseText;
      console.log(output);
      $preview.html(output);
    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZGVvLWFqYXguanMiXSwibmFtZXMiOlsid2luZG93IiwidmlkZW9BamF4IiwidXJsIiwiJHByZXZpZXciLCJkYXRhIiwiJCIsImFqYXgiLCJ0eXBlIiwiYWpheHVybCIsImNvbXBsZXRlIiwicmVzcG9uc2UiLCJvdXRwdXQiLCJyZXNwb25zZVRleHQiLCJjb25zb2xlIiwibG9nIiwiaHRtbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBT0MsU0FBUCxHQUFtQixVQUFTQyxHQUFULEVBQWNDLFFBQWQsRUFBdUI7O0FBRXhDLE1BQUlDLE9BQU87QUFDVCxjQUFVLDBCQUREO0FBRVQsWUFBUUY7QUFGQyxHQUFYOztBQUtBRyxJQUFFQyxJQUFGLENBQU87QUFDTEMsVUFBTSxNQUREO0FBRUxMLFNBQUtNLE9BRkE7QUFHTEosVUFBTUEsSUFIRDtBQUlMSyxjQUFVLGtCQUFTQyxRQUFULEVBQWtCO0FBQzFCLFVBQUlDLFNBQVNELFNBQVNFLFlBQXRCO0FBQ0FDLGNBQVFDLEdBQVIsQ0FBWUgsTUFBWjtBQUNBUixlQUFTWSxJQUFULENBQWVKLE1BQWY7QUFDRDtBQVJJLEdBQVA7QUFXRCxDQWxCRCIsImZpbGUiOiJ2aWRlby1hamF4LmpzIiwic291cmNlc0NvbnRlbnQiOlsid2luZG93LnZpZGVvQWpheCA9IGZ1bmN0aW9uKHVybCwgJHByZXZpZXcpe1xuICBcbiAgdmFyIGRhdGEgPSB7XG4gICAgXCJhY3Rpb25cIjogXCJmcmFua2xpbl92aWRlb19zaG9ydGNvZGVcIixcbiAgICBcImRhdGFcIjogdXJsXG4gIH07XG5cbiAgJC5hamF4KHtcbiAgICB0eXBlOiAncG9zdCcsXG4gICAgdXJsOiBhamF4dXJsLFxuICAgIGRhdGE6IGRhdGEsXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uKHJlc3BvbnNlKXtcbiAgICAgIHZhciBvdXRwdXQgPSByZXNwb25zZS5yZXNwb25zZVRleHQ7XG4gICAgICBjb25zb2xlLmxvZyhvdXRwdXQpO1xuICAgICAgJHByZXZpZXcuaHRtbCggb3V0cHV0ICk7XG4gICAgfVxuICB9KTtcblxufTsiXX0=
},{}],3:[function(require,module,exports){
'use strict';

$('body').on('click', '.js--clear-video', function (e) {
  var $this = $(this);

  var $thisParent = $this.closest('.js--media-wrapper');
  var $thisField = $thisParent.find('.js--video-url');
  var $preview = $thisParent.find('.js--placeholder');
  var settingKey = $thisField.data('is-customizer') ? $thisField.data('customize-setting-link') : null;

  $thisField.val('');
  $preview.empty();

  if (settingKey) {

    wp.customize(settingKey, function (obj) {
      obj.set('');
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZGVvLWNsZWFyLmpzIl0sIm5hbWVzIjpbIiQiLCJvbiIsImUiLCIkdGhpcyIsIiR0aGlzUGFyZW50IiwiY2xvc2VzdCIsIiR0aGlzRmllbGQiLCJmaW5kIiwiJHByZXZpZXciLCJzZXR0aW5nS2V5IiwiZGF0YSIsInZhbCIsImVtcHR5Iiwid3AiLCJjdXN0b21pemUiLCJvYmoiLCJzZXQiXSwibWFwcGluZ3MiOiI7O0FBQUFBLEVBQUUsTUFBRixFQUFVQyxFQUFWLENBQWEsT0FBYixFQUFzQixrQkFBdEIsRUFBMEMsVUFBU0MsQ0FBVCxFQUFXO0FBQ25ELE1BQUlDLFFBQVFILEVBQUUsSUFBRixDQUFaOztBQUVBLE1BQUlJLGNBQWNELE1BQU1FLE9BQU4sQ0FBYyxvQkFBZCxDQUFsQjtBQUNBLE1BQUlDLGFBQWFGLFlBQVlHLElBQVosQ0FBaUIsZ0JBQWpCLENBQWpCO0FBQ0EsTUFBSUMsV0FBV0osWUFBWUcsSUFBWixDQUFpQixrQkFBakIsQ0FBZjtBQUNBLE1BQUlFLGFBQWFILFdBQVdJLElBQVgsQ0FBZ0IsZUFBaEIsSUFBbUNKLFdBQVdJLElBQVgsQ0FBZ0Isd0JBQWhCLENBQW5DLEdBQStFLElBQWhHOztBQUdBSixhQUFXSyxHQUFYLENBQWUsRUFBZjtBQUNBSCxXQUFTSSxLQUFUOztBQUdFLE1BQUdILFVBQUgsRUFBZ0I7O0FBRWRJLE9BQUdDLFNBQUgsQ0FBY0wsVUFBZCxFQUEwQixVQUFXTSxHQUFYLEVBQWlCO0FBQ3pDQSxVQUFJQyxHQUFKLENBQVEsRUFBUjtBQUNELEtBRkQ7QUFHRDtBQUNKLENBbkJEIiwiZmlsZSI6InZpZGVvLWNsZWFyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJCgnYm9keScpLm9uKCdjbGljaycsICcuanMtLWNsZWFyLXZpZGVvJywgZnVuY3Rpb24oZSl7XG4gIHZhciAkdGhpcyA9ICQodGhpcyk7XG5cbiAgdmFyICR0aGlzUGFyZW50ID0gJHRoaXMuY2xvc2VzdCgnLmpzLS1tZWRpYS13cmFwcGVyJyk7XG4gIHZhciAkdGhpc0ZpZWxkID0gJHRoaXNQYXJlbnQuZmluZCgnLmpzLS12aWRlby11cmwnKTtcbiAgdmFyICRwcmV2aWV3ID0gJHRoaXNQYXJlbnQuZmluZCgnLmpzLS1wbGFjZWhvbGRlcicpO1xuICB2YXIgc2V0dGluZ0tleSA9ICR0aGlzRmllbGQuZGF0YSgnaXMtY3VzdG9taXplcicpID8gJHRoaXNGaWVsZC5kYXRhKCdjdXN0b21pemUtc2V0dGluZy1saW5rJykgOiBudWxsO1xuXG5cbiAgJHRoaXNGaWVsZC52YWwoJycpO1xuICAkcHJldmlldy5lbXB0eSgpO1xuXG5cbiAgICBpZihzZXR0aW5nS2V5ICkge1xuXG4gICAgICB3cC5jdXN0b21pemUoIHNldHRpbmdLZXksIGZ1bmN0aW9uICggb2JqICkge1xuICAgICAgICBvYmouc2V0KCcnKTtcbiAgICAgIH0gKTtcbiAgICB9XG59KTtcbiJdfQ==
},{}],4:[function(require,module,exports){
'use strict';

$('body').on('change', '.js--video-url', function (e) {

  var $this = $(this);
  var url = $this.val();
  var $thisParent = $this.closest('.js--media-wrapper');
  var $preview = $thisParent.find('.js--placeholder');
  var settingKey = $this.data('is-customizer') ? $this.data('customize-setting-link') : null;

  window.videoAjax(url, $preview);

  if (settingKey && url) {

    wp.customize(settingKey, function (obj) {
      obj.set(url);
    });
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZGVvLWZpZWxkLXVwZGF0ZWQuanMiXSwibmFtZXMiOlsiJCIsIm9uIiwiZSIsIiR0aGlzIiwidXJsIiwidmFsIiwiJHRoaXNQYXJlbnQiLCJjbG9zZXN0IiwiJHByZXZpZXciLCJmaW5kIiwic2V0dGluZ0tleSIsImRhdGEiLCJ3aW5kb3ciLCJ2aWRlb0FqYXgiLCJ3cCIsImN1c3RvbWl6ZSIsIm9iaiIsInNldCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsRUFBRSxNQUFGLEVBQVVDLEVBQVYsQ0FBYSxRQUFiLEVBQXNCLGdCQUF0QixFQUF3QyxVQUFTQyxDQUFULEVBQVc7O0FBRWpELE1BQUlDLFFBQVFILEVBQUUsSUFBRixDQUFaO0FBQ0EsTUFBSUksTUFBTUQsTUFBTUUsR0FBTixFQUFWO0FBQ0EsTUFBSUMsY0FBY0gsTUFBTUksT0FBTixDQUFjLG9CQUFkLENBQWxCO0FBQ0EsTUFBSUMsV0FBV0YsWUFBWUcsSUFBWixDQUFpQixrQkFBakIsQ0FBZjtBQUNBLE1BQUlDLGFBQWFQLE1BQU1RLElBQU4sQ0FBVyxlQUFYLElBQThCUixNQUFNUSxJQUFOLENBQVcsd0JBQVgsQ0FBOUIsR0FBcUUsSUFBdEY7O0FBR0FDLFNBQU9DLFNBQVAsQ0FBaUJULEdBQWpCLEVBQXNCSSxRQUF0Qjs7QUFFQSxNQUFHRSxjQUFjTixHQUFqQixFQUF1Qjs7QUFFckJVLE9BQUdDLFNBQUgsQ0FBY0wsVUFBZCxFQUEwQixVQUFXTSxHQUFYLEVBQWlCO0FBQ3pDQSxVQUFJQyxHQUFKLENBQVNiLEdBQVQ7QUFDRCxLQUZEO0FBR0Q7QUFFRixDQWxCRCIsImZpbGUiOiJ2aWRlby1maWVsZC11cGRhdGVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJCgnYm9keScpLm9uKCdjaGFuZ2UnLCcuanMtLXZpZGVvLXVybCcsIGZ1bmN0aW9uKGUpe1xuXG4gIHZhciAkdGhpcyA9ICQodGhpcyk7XG4gIHZhciB1cmwgPSAkdGhpcy52YWwoKTtcbiAgdmFyICR0aGlzUGFyZW50ID0gJHRoaXMuY2xvc2VzdCgnLmpzLS1tZWRpYS13cmFwcGVyJyk7XG4gIHZhciAkcHJldmlldyA9ICR0aGlzUGFyZW50LmZpbmQoJy5qcy0tcGxhY2Vob2xkZXInKTtcbiAgdmFyIHNldHRpbmdLZXkgPSAkdGhpcy5kYXRhKCdpcy1jdXN0b21pemVyJykgPyAkdGhpcy5kYXRhKCdjdXN0b21pemUtc2V0dGluZy1saW5rJykgOiBudWxsO1xuXG5cbiAgd2luZG93LnZpZGVvQWpheCh1cmwsICRwcmV2aWV3KTtcblxuICBpZihzZXR0aW5nS2V5ICYmIHVybCApIHtcblxuICAgIHdwLmN1c3RvbWl6ZSggc2V0dGluZ0tleSwgZnVuY3Rpb24gKCBvYmogKSB7XG4gICAgICBvYmouc2V0KCB1cmwgKTtcbiAgICB9ICk7XG4gIH1cblxufSk7XG4iXX0=
},{}],5:[function(require,module,exports){
'use strict';

$('body').on('click', '.js--media-library', function (event) {
		var file_frame;
		var wp_media_post_id = wp.media.model.settings.post.id; // Store the old id
		var set_to_post_id = 0; // Set this

		var $this = $(this);

		var $thisParent = $this.closest('.js--media-wrapper');
		var $thisField = $thisParent.find('.js--video-url');
		var $preview = $thisParent.find('.js--placeholder');
		var filter = $this.data('filter');
		var settingKey = $thisField.data('is-customizer') ? $thisField.data('customize-setting-link') : null;

		event.preventDefault($thisParent);

		// If the media frame already exists, reopen it.
		if (file_frame) {
				// Set the post ID to what we want
				file_frame.uploader.uploader.param('post_id', set_to_post_id);
				// Open frame
				file_frame.open();
				return;
		} else {
				// Set the wp.media post id so the uploader grabs the ID we want when initialised
				wp.media.model.settings.post.id = set_to_post_id;
		}

		// Create the media frame.
		window.butt = file_frame = wp.media.frames.file_frame = wp.media({
				title: 'Select a image to upload',
				button: {
						text: 'Use this image'
				},
				multiple: false,
				library: {
						type: filter
				}
		});

		// When an image is selected, run a callback.
		file_frame.on('select', function () {
				// We set multiple to false so only get one image from the uploader
				attachment = file_frame.state().get('selection').first().toJSON();

				var url = attachment.url;
				var fileName = attachment.filename;
				var id = attachment.id;

				$thisField.val(url);

				window.videoAjax(url, $preview);

				if (settingKey && url) {
						wp.customize(settingKey, function (obj) {
								obj.set(url);
						});
				}

				// Restore the main post ID
				wp.media.model.settings.post.id = wp_media_post_id;
		});

		// Finally, open the modal
		file_frame.open();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpZGVvLW1lZGlhLWxpYnJhcnkuanMiXSwibmFtZXMiOlsiJCIsIm9uIiwiZXZlbnQiLCJmaWxlX2ZyYW1lIiwid3BfbWVkaWFfcG9zdF9pZCIsIndwIiwibWVkaWEiLCJtb2RlbCIsInNldHRpbmdzIiwicG9zdCIsImlkIiwic2V0X3RvX3Bvc3RfaWQiLCIkdGhpcyIsIiR0aGlzUGFyZW50IiwiY2xvc2VzdCIsIiR0aGlzRmllbGQiLCJmaW5kIiwiJHByZXZpZXciLCJmaWx0ZXIiLCJkYXRhIiwic2V0dGluZ0tleSIsInByZXZlbnREZWZhdWx0IiwidXBsb2FkZXIiLCJwYXJhbSIsIm9wZW4iLCJ3aW5kb3ciLCJidXR0IiwiZnJhbWVzIiwidGl0bGUiLCJidXR0b24iLCJ0ZXh0IiwibXVsdGlwbGUiLCJsaWJyYXJ5IiwidHlwZSIsImF0dGFjaG1lbnQiLCJzdGF0ZSIsImdldCIsImZpcnN0IiwidG9KU09OIiwidXJsIiwiZmlsZU5hbWUiLCJmaWxlbmFtZSIsInZhbCIsInZpZGVvQWpheCIsImN1c3RvbWl6ZSIsIm9iaiIsInNldCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsRUFBRSxNQUFGLEVBQVVDLEVBQVYsQ0FBYSxPQUFiLEVBQXFCLG9CQUFyQixFQUEyQyxVQUFVQyxLQUFWLEVBQWlCO0FBQzFELE1BQUlDLFVBQUo7QUFDQSxNQUFJQyxtQkFBbUJDLEdBQUdDLEtBQUgsQ0FBU0MsS0FBVCxDQUFlQyxRQUFmLENBQXdCQyxJQUF4QixDQUE2QkMsRUFBcEQsQ0FGMEQsQ0FFRjtBQUN4RCxNQUFJQyxpQkFBaUIsQ0FBckIsQ0FIMEQsQ0FHbEM7O0FBRXhCLE1BQUlDLFFBQVFaLEVBQUUsSUFBRixDQUFaOztBQUVBLE1BQUlhLGNBQWNELE1BQU1FLE9BQU4sQ0FBYyxvQkFBZCxDQUFsQjtBQUNBLE1BQUlDLGFBQWFGLFlBQVlHLElBQVosQ0FBaUIsZ0JBQWpCLENBQWpCO0FBQ0EsTUFBSUMsV0FBV0osWUFBWUcsSUFBWixDQUFpQixrQkFBakIsQ0FBZjtBQUNBLE1BQUlFLFNBQVNOLE1BQU1PLElBQU4sQ0FBVyxRQUFYLENBQWI7QUFDQSxNQUFJQyxhQUFhTCxXQUFXSSxJQUFYLENBQWdCLGVBQWhCLElBQW1DSixXQUFXSSxJQUFYLENBQWdCLHdCQUFoQixDQUFuQyxHQUErRSxJQUFoRzs7QUFFRGpCLFFBQU1tQixjQUFOLENBQXFCUixXQUFyQjs7QUFFQTtBQUNBLE1BQUtWLFVBQUwsRUFBa0I7QUFDakI7QUFDQUEsZUFBV21CLFFBQVgsQ0FBb0JBLFFBQXBCLENBQTZCQyxLQUE3QixDQUFvQyxTQUFwQyxFQUErQ1osY0FBL0M7QUFDQTtBQUNBUixlQUFXcUIsSUFBWDtBQUNBO0FBQ0EsR0FORCxNQU1PO0FBQ047QUFDQW5CLE9BQUdDLEtBQUgsQ0FBU0MsS0FBVCxDQUFlQyxRQUFmLENBQXdCQyxJQUF4QixDQUE2QkMsRUFBN0IsR0FBa0NDLGNBQWxDO0FBQ0E7O0FBRUQ7QUFDQWMsU0FBT0MsSUFBUCxHQUFjdkIsYUFBYUUsR0FBR0MsS0FBSCxDQUFTcUIsTUFBVCxDQUFnQnhCLFVBQWhCLEdBQTZCRSxHQUFHQyxLQUFILENBQVM7QUFDaEVzQixXQUFPLDBCQUR5RDtBQUVoRUMsWUFBUTtBQUNQQyxZQUFNO0FBREMsS0FGd0Q7QUFLaEVDLGNBQVUsS0FMc0Q7QUFNOURDLGFBQVM7QUFDUEMsWUFBTWY7QUFEQztBQU5xRCxHQUFULENBQXhEOztBQVdBO0FBQ0FmLGFBQVdGLEVBQVgsQ0FBZSxRQUFmLEVBQXlCLFlBQVc7QUFDbkM7QUFDQWlDLGlCQUFhL0IsV0FBV2dDLEtBQVgsR0FBbUJDLEdBQW5CLENBQXVCLFdBQXZCLEVBQW9DQyxLQUFwQyxHQUE0Q0MsTUFBNUMsRUFBYjs7QUFFRSxRQUFJQyxNQUFNTCxXQUFXSyxHQUFyQjtBQUNBLFFBQUlDLFdBQVdOLFdBQVdPLFFBQTFCO0FBQ0EsUUFBSS9CLEtBQUt3QixXQUFXeEIsRUFBcEI7O0FBRUFLLGVBQVcyQixHQUFYLENBQWVILEdBQWY7O0FBRUFkLFdBQU9rQixTQUFQLENBQWlCSixHQUFqQixFQUFzQnRCLFFBQXRCOztBQUdBLFFBQUdHLGNBQWNtQixHQUFqQixFQUFzQjtBQUNwQmxDLFNBQUd1QyxTQUFILENBQWN4QixVQUFkLEVBQTBCLFVBQVd5QixHQUFYLEVBQWlCO0FBQ3pDQSxZQUFJQyxHQUFKLENBQVNQLEdBQVQ7QUFDRCxPQUZEO0FBR0Q7O0FBR0g7QUFDQWxDLE9BQUdDLEtBQUgsQ0FBU0MsS0FBVCxDQUFlQyxRQUFmLENBQXdCQyxJQUF4QixDQUE2QkMsRUFBN0IsR0FBa0NOLGdCQUFsQztBQUNBLEdBdEJEOztBQXdCQztBQUNBRCxhQUFXcUIsSUFBWDtBQUNELENBbEVEIiwiZmlsZSI6InZpZGVvLW1lZGlhLWxpYnJhcnkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIkKCdib2R5Jykub24oJ2NsaWNrJywnLmpzLS1tZWRpYS1saWJyYXJ5JywgZnVuY3Rpb24oIGV2ZW50ICl7XG4gIHZhciBmaWxlX2ZyYW1lO1xuICB2YXIgd3BfbWVkaWFfcG9zdF9pZCA9IHdwLm1lZGlhLm1vZGVsLnNldHRpbmdzLnBvc3QuaWQ7IC8vIFN0b3JlIHRoZSBvbGQgaWRcbiAgdmFyIHNldF90b19wb3N0X2lkID0gMDsgLy8gU2V0IHRoaXNcbiAgXG4gIHZhciAkdGhpcyA9ICQodGhpcyk7XG5cbiAgdmFyICR0aGlzUGFyZW50ID0gJHRoaXMuY2xvc2VzdCgnLmpzLS1tZWRpYS13cmFwcGVyJyk7XG4gIHZhciAkdGhpc0ZpZWxkID0gJHRoaXNQYXJlbnQuZmluZCgnLmpzLS12aWRlby11cmwnKTtcbiAgdmFyICRwcmV2aWV3ID0gJHRoaXNQYXJlbnQuZmluZCgnLmpzLS1wbGFjZWhvbGRlcicpO1xuICB2YXIgZmlsdGVyID0gJHRoaXMuZGF0YSgnZmlsdGVyJyk7XG4gIHZhciBzZXR0aW5nS2V5ID0gJHRoaXNGaWVsZC5kYXRhKCdpcy1jdXN0b21pemVyJykgPyAkdGhpc0ZpZWxkLmRhdGEoJ2N1c3RvbWl6ZS1zZXR0aW5nLWxpbmsnKSA6IG51bGw7XG5cblx0ZXZlbnQucHJldmVudERlZmF1bHQoJHRoaXNQYXJlbnQpO1xuXG5cdC8vIElmIHRoZSBtZWRpYSBmcmFtZSBhbHJlYWR5IGV4aXN0cywgcmVvcGVuIGl0LlxuXHRpZiAoIGZpbGVfZnJhbWUgKSB7XG5cdFx0Ly8gU2V0IHRoZSBwb3N0IElEIHRvIHdoYXQgd2Ugd2FudFxuXHRcdGZpbGVfZnJhbWUudXBsb2FkZXIudXBsb2FkZXIucGFyYW0oICdwb3N0X2lkJywgc2V0X3RvX3Bvc3RfaWQgKTtcblx0XHQvLyBPcGVuIGZyYW1lXG5cdFx0ZmlsZV9mcmFtZS5vcGVuKCk7XG5cdFx0cmV0dXJuO1xuXHR9IGVsc2Uge1xuXHRcdC8vIFNldCB0aGUgd3AubWVkaWEgcG9zdCBpZCBzbyB0aGUgdXBsb2FkZXIgZ3JhYnMgdGhlIElEIHdlIHdhbnQgd2hlbiBpbml0aWFsaXNlZFxuXHRcdHdwLm1lZGlhLm1vZGVsLnNldHRpbmdzLnBvc3QuaWQgPSBzZXRfdG9fcG9zdF9pZDtcblx0fVxuXG5cdC8vIENyZWF0ZSB0aGUgbWVkaWEgZnJhbWUuXG5cdHdpbmRvdy5idXR0ID0gZmlsZV9mcmFtZSA9IHdwLm1lZGlhLmZyYW1lcy5maWxlX2ZyYW1lID0gd3AubWVkaWEoe1xuXHRcdHRpdGxlOiAnU2VsZWN0IGEgaW1hZ2UgdG8gdXBsb2FkJyxcblx0XHRidXR0b246IHtcblx0XHRcdHRleHQ6ICdVc2UgdGhpcyBpbWFnZScsXG5cdFx0fSxcblx0XHRtdWx0aXBsZTogZmFsc2UsXG4gICAgbGlicmFyeToge1xuICAgICAgdHlwZTogZmlsdGVyXG4gICAgfVxuXHR9KTtcblxuXHQvLyBXaGVuIGFuIGltYWdlIGlzIHNlbGVjdGVkLCBydW4gYSBjYWxsYmFjay5cblx0ZmlsZV9mcmFtZS5vbiggJ3NlbGVjdCcsIGZ1bmN0aW9uKCkge1xuXHRcdC8vIFdlIHNldCBtdWx0aXBsZSB0byBmYWxzZSBzbyBvbmx5IGdldCBvbmUgaW1hZ2UgZnJvbSB0aGUgdXBsb2FkZXJcblx0XHRhdHRhY2htZW50ID0gZmlsZV9mcmFtZS5zdGF0ZSgpLmdldCgnc2VsZWN0aW9uJykuZmlyc3QoKS50b0pTT04oKTtcblxuICAgIHZhciB1cmwgPSBhdHRhY2htZW50LnVybDtcbiAgICB2YXIgZmlsZU5hbWUgPSBhdHRhY2htZW50LmZpbGVuYW1lO1xuICAgIHZhciBpZCA9IGF0dGFjaG1lbnQuaWQ7XG5cbiAgICAkdGhpc0ZpZWxkLnZhbCh1cmwpO1xuXG4gICAgd2luZG93LnZpZGVvQWpheCh1cmwsICRwcmV2aWV3KTtcblxuXG4gICAgaWYoc2V0dGluZ0tleSAmJiB1cmwpIHtcbiAgICAgIHdwLmN1c3RvbWl6ZSggc2V0dGluZ0tleSwgZnVuY3Rpb24gKCBvYmogKSB7XG4gICAgICAgIG9iai5zZXQoIHVybCApO1xuICAgICAgfSApO1xuICAgIH1cblxuXG5cdFx0Ly8gUmVzdG9yZSB0aGUgbWFpbiBwb3N0IElEXG5cdFx0d3AubWVkaWEubW9kZWwuc2V0dGluZ3MucG9zdC5pZCA9IHdwX21lZGlhX3Bvc3RfaWQ7XG5cdH0pO1xuXG5cdFx0Ly8gRmluYWxseSwgb3BlbiB0aGUgbW9kYWxcblx0XHRmaWxlX2ZyYW1lLm9wZW4oKTtcbn0pO1xuIl19
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
